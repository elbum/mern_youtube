[{"C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\index.js":"1","C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\reportWebVitals.js":"2","C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\App.js":"3","C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"4","C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"5","C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"6","C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\_reducers\\index.js":"7","C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\_actions\\user_action.js":"8","C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\_reducers\\user_reducer.js":"9","C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\_actions\\types.js":"10","C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\hoc\\auth.js":"11","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\index.js":"12","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\App.js":"13","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\reportWebVitals.js":"14","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\_reducers\\index.js":"15","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\hoc\\auth.js":"16","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"17","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"18","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"19","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\_reducers\\user_reducer.js":"20","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\_actions\\user_action.js":"21","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\_actions\\types.js":"22","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\Footer\\Footer.js":"23","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\NavBar\\NavBar.js":"24","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"25","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"26","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoUploadPage\\VideoUploadPage.js":"27","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\VideoDetailPage.js":"28","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\Sections\\SideVideo.js":"29","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\Sections\\Subscribe.js":"30","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\SubscriptionPage\\SubscriptionPage.js":"31","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\Sections\\Comment.js":"32","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\Sections\\SingleComment.js":"33","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\Sections\\ReplyComment.js":"34","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\Sections\\LikeDislikes.js":"35"},{"size":972,"mtime":1610787163644,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1610513787194,"results":"38","hashOfConfig":"37"},{"size":1031,"mtime":1610805251786,"results":"39","hashOfConfig":"37"},{"size":1432,"mtime":1610806015684,"results":"40","hashOfConfig":"37"},{"size":2014,"mtime":1610886218080,"results":"41","hashOfConfig":"37"},{"size":2987,"mtime":1610805988192,"results":"42","hashOfConfig":"37"},{"size":208,"mtime":1610774590881,"results":"43","hashOfConfig":"37"},{"size":866,"mtime":1610804652996,"results":"44","hashOfConfig":"37"},{"size":469,"mtime":1610805498854,"results":"45","hashOfConfig":"37"},{"size":129,"mtime":1610804561202,"results":"46","hashOfConfig":"37"},{"size":1590,"mtime":1610886464185,"results":"47","hashOfConfig":"37"},{"size":1007,"mtime":1610886770800,"results":"48","hashOfConfig":"49"},{"size":1821,"mtime":1611203657702,"results":"50","hashOfConfig":"49"},{"size":375,"mtime":1610886770801,"results":"51","hashOfConfig":"49"},{"size":208,"mtime":1610886770793,"results":"52","hashOfConfig":"49"},{"size":1590,"mtime":1610886770799,"results":"53","hashOfConfig":"49"},{"size":2796,"mtime":1611203883339,"results":"54","hashOfConfig":"49"},{"size":2197,"mtime":1611195688375,"results":"55","hashOfConfig":"49"},{"size":2987,"mtime":1610886770798,"results":"56","hashOfConfig":"49"},{"size":469,"mtime":1610886770794,"results":"57","hashOfConfig":"49"},{"size":866,"mtime":1610886770792,"results":"58","hashOfConfig":"49"},{"size":129,"mtime":1610886770792,"results":"59","hashOfConfig":"49"},{"size":150,"mtime":1610887612688,"results":"60","hashOfConfig":"49"},{"size":1720,"mtime":1611204330010,"results":"61","hashOfConfig":"49"},{"size":823,"mtime":1611203992789,"results":"62","hashOfConfig":"49"},{"size":1239,"mtime":1610890618623,"results":"63","hashOfConfig":"49"},{"size":7040,"mtime":1611031773503,"results":"64","hashOfConfig":"49"},{"size":3773,"mtime":1611279495502,"results":"65","hashOfConfig":"49"},{"size":2169,"mtime":1611060323596,"results":"66","hashOfConfig":"49"},{"size":2969,"mtime":1611196760088,"results":"67","hashOfConfig":"49"},{"size":3104,"mtime":1611205555971,"results":"68","hashOfConfig":"49"},{"size":2774,"mtime":1611239347957,"results":"69","hashOfConfig":"49"},{"size":2776,"mtime":1611280405951,"results":"70","hashOfConfig":"49"},{"size":1891,"mtime":1611239327070,"results":"71","hashOfConfig":"49"},{"size":4766,"mtime":1611285042733,"results":"72","hashOfConfig":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"10jq0o8",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"6jqzzn",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"99"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"99"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"132","usedDeprecatedRules":"99"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"99"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"99"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"99"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"99"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"99"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\index.js",[],["154","155"],"C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\reportWebVitals.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\App.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\components\\views\\LandingPage\\LandingPage.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\components\\views\\LoginPage\\LoginPage.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\_reducers\\index.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\_actions\\user_action.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\_reducers\\user_reducer.js",["156"],"import { LOGIN_USER, REGISTER_USER, AUTH_USER } from '../_actions/types';\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess: action.payload }\r\n        case REGISTER_USER:\r\n            return { ...state, register: action.payload }\r\n        case AUTH_USER:\r\n            return { ...state, userData: action.payload }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\_actions\\types.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\MERN_boilerplate\\client\\src\\hoc\\auth.js",["157","158"],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\index.js",[],["159","160"],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\App.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\reportWebVitals.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\_reducers\\index.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\hoc\\auth.js",["161","162"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../_actions/user_action';\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    // option\r\n    // null - 아무나\r\n    // true - 로그인한 사람만 가능\r\n    // false - 로그인한 사람 불가능\r\n\r\n    //adminRoute = true 는 어드민만 들어갈수있음.\r\n\r\n    const dispatch = useDispatch();\r\n    function AuthenticationCheck(props) {\r\n        useEffect(() => {\r\n\r\n            dispatch(auth()).then(response => {\r\n                console.log(response)\r\n\r\n                // 권한별 분기처리\r\n\r\n                // 로그인하지 않은 상태\r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n\r\n                } else {\r\n                    // 로그인 상태\r\n\r\n                    // 어드민 아닌데 어드민 들어가려고 하면\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    } else {\r\n                        // 로그인한 유저가 못들어가는곳 (회원가입)\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                }\r\n            })\r\n\r\n            // axios.get('/api/users/auth')\r\n\r\n        }, [])\r\n\r\n        return (<SpecificComponent />)\r\n    }\r\n\r\n\r\n\r\n    return AuthenticationCheck\r\n}","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["163","164","165","166","167","168","169"],"import React, { useEffect ,useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Button, DatePicker, version } from \"antd\"\r\nimport \"antd/dist/antd.css\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Card,Icons,Avatar, Col,Typography,Row} from 'antd';\r\nimport {PlusCircleOutlined} from '@ant-design/icons';\r\nimport moment from \"moment\";\r\n\r\nconst {Title} = Typography;\r\nconst {Meta} = Card;\r\n\r\nfunction LandingPage(props) {\r\n\r\n    const [Video, setVideo] = useState([])\r\n    \r\n    // dom 이 로드되자마자 뭘할건가 정의.\r\n    // 클래스였으면 componentdidMount 써야함.\r\n    // 이건 훅이니까 useEffect\r\n    useEffect(() => {\r\n        axios.get('/api/hello')\r\n            .then(function(response) { if(response.status === 200){\r\n                console.log(\"Backend OK\")\r\n            } else {\r\n                console.log(\"Backend Down.\")\r\n            }})\r\n            .then(axios.get('/api/video/getVideos')\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    console.log(response.data)\r\n                    setVideo(response.data.videos)\r\n\r\n                } else {\r\n                    alert(\"Video Load Error\")\r\n                }\r\n            }))\r\n              \r\n    }, []);\r\n\r\n    const renderCards = Video.map((video,index) => {\r\n\r\n        var minutes = Math.floor(video.duration/60);\r\n        var seconds = Math.floor(video.duration - minutes*60);\r\n\r\n\r\n        return <Col lg={6} md={8} xs={24} key={index}>\r\n           \r\n\r\n            <div style={{position:'relative'}}>\r\n                <a href={`/video/${video._id}`}>\r\n                    <img style={{width:'100%'}} src={`http://localhost:5000/${video.thumbnail}`}/>\r\n                    <div className=\"duration\">\r\n                        <span>{minutes} : {seconds}</span>\r\n\r\n                    </div>\r\n                </a>\r\n            </div>\r\n\r\n        <br/>\r\n        <Meta\r\n        // avatar={\r\n        //     // <Avatar src={Video.writer.image}/>\r\n        // }\r\n        title={Video.title}\r\n        description=\"\"/>\r\n        <span>{video.writer.name}</span><br/>\r\n        <span style={{marginLeft:'3rem'}}>{video.views} views </span> - <span>{moment(video.creaatedAt).format(\"MMM Do YY\")}</span>\r\n\r\n\r\n         </Col>\r\n\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n    // const renderCards = \r\n    return (\r\n        <div style={{ width: '85%', margin : '3rem auto' }}>\r\n            <br/><br/><br/><br/><br/><br/>\r\n            <Title level={2}> Recommended </Title>\r\n            <Title level={5}> Level3Recommended </Title>\r\n            <hr/>\r\n            <Row gutter={[32,16]}>\r\n\r\n                {renderCards}\r\n\r\n           \r\n\r\n\r\n            </Row>\r\n            <br/><br/><br/><br/><br/><br/>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default withRouter(LandingPage)\r\n","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\LoginPage\\LoginPage.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\_reducers\\user_reducer.js",["170"],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\_actions\\user_action.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\_actions\\types.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\Footer\\Footer.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\NavBar\\NavBar.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoUploadPage\\VideoUploadPage.js",["171","172","173"],"import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginUser } from '../../../_actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Typography, Button, Form, message, Input } from 'antd';\r\nimport {PlusCircleOutlined} from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\n\r\n// id 를 가저오기 위해 훅을 쓰자\r\nimport {useSelector} from 'react-redux';\r\n\r\n// import TextArea from 'antd/lib/input/TextArea';\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst PrivateOptions = [\r\n    {value:0 , label:\"Private\"},\r\n    {value:1 , label:\"Public\"}\r\n]\r\n\r\nconst CategoryOptions = [\r\n    {value:0 , label:\"Film & Animation\"},\r\n    {value:1 , label:\"Autos & Vehicles\"},\r\n    {value:2 , label:\"Music\"},\r\n    {value:3 , label:\"Pets & Animals\"}\r\n]\r\nfunction VideoUploadPage(props) {\r\n    // state 에다가 value 를 저장한다.\r\n    // 서버에 보낼떈 state 에있는 값을 보내버림.\r\n    const user = useSelector(state=>state.user); // hook\r\n\r\n    const [VideoTitle, setVideoTitle] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Private, setPrivate] = useState(0)\r\n    const [Category, setCategory] = useState(\"Film & Animation\")\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [Duration, setDuration] = useState(\"\")\r\n    const [ThumbnailPath, setThumbnailPath] = useState(\"\")\r\n    const onTitleChange = (e) => {\r\n        setVideoTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = (e) => {\r\n        setDescription(e.currentTarget.value)\r\n    }\r\n\r\n    const onPrivateChange = (e) => {\r\n        setPrivate(e.currentTarget.value)\r\n    }\r\n\r\n    const onCategoryChange = (e) => {\r\n        setCategory(e.currentTarget.value)\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        let formData = new FormData;\r\n        const config = {\r\n            header:{'content-type':'multipart/form-data'}\r\n        }\r\n        formData.append(\"file\",files[0])\r\n\r\n        console.log(files)\r\n        // axios 파일을 보낼때는 위에 헤더가 꼭 있어야함.\r\n        axios.post('/api/video/uploadfiles',formData , config)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                console.log(response.data)\r\n\r\n                // 성공하면 썸네일 만들자\r\n                let variable = {\r\n                    url:response.data.url,\r\n                    fileName:response.data.fileName\r\n                }\r\n\r\n                setFilePath(response.data.url)\r\n\r\n                axios.post('/api/video/thumbnail',variable)\r\n                .then(response => {\r\n                    if(response.data.success) {\r\n                        console.log(response.data)\r\n                        // 썸네일 성공하면 state 에 저장해놔야됨.\r\n                        setDuration(response.data.fileDuration)\r\n                        setThumbnailPath(response.data.url)\r\n\r\n\r\n                    } else {\r\n                        alert('Thumnail generating failed')\r\n                    }\r\n                })\r\n\r\n            } else {\r\n                alert('upload failed.')\r\n            }\r\n        })\r\n    }\r\n    const onSubmit=(e)=>{\r\n        e.preventDefault();  // 초기화 안되게\r\n        const variables = {\r\n            writer: user.userData._id ,    // redux 데이터 로드\r\n            title: VideoTitle,\r\n            description: Description,\r\n            privacy: Private,\r\n            filePath: FilePath,\r\n            category: Category,\r\n            duration: Duration,\r\n            thumbnail: ThumbnailPath,\r\n\r\n        }\r\n        axios.post('/api/video/uploadVideo',variables)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                console.log(response.data)\r\n                message.success('Upload Succeed!')\r\n                setTimeout(function(){\r\n                    props.history.push('/')\r\n                },3000)\r\n\r\n            } else {\r\n                alert('Video Upload to DB Fail')\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <br /><br /><br /><br />\r\n\r\n\r\n\r\n\r\n\r\n            <div style={{ textAlign: 'center', marginTop: '2rem', marginBottom: '2rem' }}>\r\n                <Title>Upload Video</Title>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <Form onSubmit={onSubmit}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    {/* drop zone */}\r\n                    <Dropzone \r\n                        onDrop = {onDrop}\r\n                        multiple = {false}\r\n                        maxSize = {800000000000}\r\n                    >\r\n                        {({ getRootProps, getInputProps }) => (\r\n\r\n                            <div style={{\r\n                                width: '300px', height: '240px', border: '1px solid lightgray',\r\n                                alignItems: 'center', justifyContent: 'center'\r\n                            }}{...getRootProps()}>\r\n                        <input {...getInputProps()}/>\r\n                        <PlusCircleOutlined style={{fontSize:\"3rem\"}}/>\r\n                        </div>\r\n                        \r\n                        )}\r\n\r\n                    </Dropzone>\r\n\r\n                    {/* thumbnail 있을때만 렌더링 */}\r\n                    {ThumbnailPath &&\r\n                    <div>\r\n                        <img src={`http://localhost:5000/${ThumbnailPath}`} alt='thumbnail' />\r\n                    </div>\r\n                    }\r\n\r\n\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <label>Title</label>\r\n                <Input\r\n                    onChange={onTitleChange}\r\n                    value={VideoTitle}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Description</label>\r\n                <TextArea\r\n                    onChange={onDescriptionChange}\r\n                    value={Description}\r\n                />\r\n                <br />\r\n                <br />\r\n                <select onChange={onPrivateChange}>\r\n                    {PrivateOptions.map((item,index) => (\r\n                        <option key={index} value={item.value}>{item.label}</option>\r\n                    ))}\r\n                    {/* 이것보다 낫다. <option key value> </option> */}\r\n                </select><br /><br />\r\n\r\n\r\n                <select onChange={onCategoryChange}>\r\n                    {CategoryOptions.map((item,index) => (\r\n                        <option key={index} value={item.value}>{item.label}</option>\r\n                    ))}\r\n                    {/* <option key value></option> */}\r\n                </select><br /><br />\r\n\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Submit\r\n\r\n                </Button>\r\n\r\n\r\n            </Form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(VideoUploadPage)\r\n\r\n","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\VideoDetailPage.js",["174","175","176"],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\Sections\\SideVideo.js",[],"C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\Sections\\Subscribe.js",["177"],"import React,{useEffect,useState} from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\nfunction Subscribe(props) {\r\n\r\n    const [SubscribeNumber, setSubscribeNumber] = useState(0)\r\n    const [Subscribed, setSubscribed] = useState(false)\r\n\r\n    useEffect(()=>{\r\n\r\n        let variable = {userTo:props.userTo}\r\n        axios.post('/api/subscribe/subscriberNumber',variable)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                console.log(response.data)\r\n                setSubscribeNumber(response.data.subscribeNumber)\r\n\r\n            } else {\r\n                alert('subscriber number info failed')\r\n            }\r\n        })\r\n\r\n        // 내아이디와 조회한애 아이디를 같이 던저서 내가 구독자인지 확인.\r\n        let subscribedVariable = { userTo:props.userTo , userFrom : localStorage.getItem('userId') }\r\n\r\n        axios.post('/api/subscribe/subscribed',subscribedVariable)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                console.log(response.data.subscribed)\r\n                setSubscribed(response.data.subscribed)\r\n\r\n            } else {\r\n                alert('isSubscribed info failed')\r\n            }\r\n        })\r\n\r\n    },[])\r\n\r\n    const onSubscribe = () => {\r\n        // 위에선 로컬에서 가저왔는데. 여기선 프롭에서..\r\n        let subscribedVariable = { userTo:props.userTo , userFrom : props.userFrom }\r\n        if(Subscribed) {\r\n            // 구독중이면 구독취소\r\n\r\n            axios.post('/api/subscribe/unSubscribe',subscribedVariable)\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    console.log('unsubscribe succeed')\r\n                    setSubscribeNumber(SubscribeNumber -1)\r\n                    setSubscribed(!Subscribed)\r\n\r\n                } else {\r\n                    alert('unsubscribe failed')\r\n                }\r\n            })\r\n\r\n        } else {\r\n            // 구독중이 아니면 구독신청\r\n\r\n            axios.post('/api/subscribe/subscribe',subscribedVariable)\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    console.log('enroll subscribe succeed')\r\n                    setSubscribeNumber(SubscribeNumber + 1)\r\n                    setSubscribed(!Subscribed)\r\n\r\n                } else {\r\n                    alert('enroll subscribe failed')\r\n                }\r\n            })\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n           <button style={{backgroundColor: `${Subscribed ?  '#AAAAAA': '#CC0000'}`, borderRadius:'4px',\r\n        color:'white',padding:'10px 16px',\r\n        fontWeight:'500',fontSize:'1rem',textTransform:'uppercase'\r\n        }}\r\n        onClick={onSubscribe}\r\n        >\r\n            {SubscribeNumber} {Subscribed ? 'Subscribed' : 'You can Subscribe' }\r\n            </button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Subscribe)\r\n","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\SubscriptionPage\\SubscriptionPage.js",["178","179","180","181","182","183","184","185"],"import React, { useEffect ,useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Button, DatePicker, version } from \"antd\"\r\nimport \"antd/dist/antd.css\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Card,Icons,Avatar, Col,Typography,Row} from 'antd';\r\nimport {PlusCircleOutlined} from '@ant-design/icons';\r\nimport moment from \"moment\";\r\n\r\n\r\nconst {Title} = Typography;\r\nconst {Meta} = Card;\r\n\r\nfunction SubscriptionPage() {\r\n\r\n    const [Video, setVideo] = useState([])\r\n    \r\n    // dom 이 로드되자마자 뭘할건가 정의.\r\n    // 클래스였으면 componentdidMount 써야함.\r\n    // 이건 훅이니까 useEffect\r\n    useEffect(() => {\r\n        // 구독하고있는 비디오만 가져와야 하니까 param 필요함.\r\n        const subscriptionvariables = {\r\n            userFrom : localStorage.getItem(\"userId\"),\r\n        }\r\n        console.log(\"Localstrage UserId =\",subscriptionvariables)\r\n        axios.get('/api/hello')\r\n            .then(function(response) { if(response.status === 200){\r\n                console.log(\"Backend OK\")\r\n            } else {\r\n                console.log(\"Backend Down.\")\r\n            }})\r\n            .then(axios.post('/api/video/getSubscriptionVideos',subscriptionvariables)\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    console.log(response.data)\r\n                    setVideo(response.data.videos)\r\n\r\n                } else {\r\n                    alert(\"Subscription Video Load Error\")\r\n                }\r\n            }))\r\n              \r\n    }, []);\r\n\r\n    const renderCards = Video.map((video,index) => {\r\n\r\n        var minutes = Math.floor(video.duration/60);\r\n        var seconds = Math.floor(video.duration - minutes*60);\r\n\r\n\r\n        return <Col lg={6} md={8} xs={24} key={index}>\r\n           \r\n\r\n            <div style={{position:'relative'}}>\r\n                <a href={`/video/${video._id}`}>\r\n                    <img style={{width:'100%'}} src={`http://localhost:5000/${video.thumbnail}`}/>\r\n                    <div className=\"duration\">\r\n                        <span>{minutes} : {seconds}</span>\r\n\r\n                    </div>\r\n                </a>\r\n            </div>\r\n\r\n        <br/>\r\n        <Meta\r\n        // avatar={\r\n        //     // <Avatar src={Video.writer.image}/>\r\n        // }\r\n        title={Video.title}\r\n        description=\"\"/>\r\n        <span>{video.writer.name}</span><br/>\r\n        <span style={{marginLeft:'3rem'}}>{video.views} views </span> - <span>{moment(video.creaatedAt).format(\"MMM Do YY\")}</span>\r\n\r\n\r\n         </Col>\r\n\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n    // const renderCards = \r\n    return (\r\n        <div style={{ width: '85%', margin : '3rem auto' }}>\r\n            <br/><br/><br/><br/><br/><br/>\r\n            <Title level={2}> SubScription List </Title>\r\n            <Title level={5}> Level3Recommended </Title>\r\n            <hr/>\r\n            <Row gutter={[32,16]}>\r\n\r\n                {renderCards}\r\n\r\n           \r\n\r\n\r\n            </Row>\r\n            <br/><br/><br/><br/><br/><br/>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SubscriptionPage\r\n","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\Sections\\Comment.js",["186","187","188","189","190","191","192","193"],"import React,{useEffect,useState} from 'react'\r\nimport {Row , Col , Card , List, Typography,Input} from 'antd'\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport SingleComment from './SingleComment'\r\nimport ReplyComment from './ReplyComment'\r\nconst {Title} = Typography;\r\nconst {Meta} = Card;\r\nconst {TextArea} = Input\r\n\r\nfunction Comment(props) {\r\n    const user = useSelector(state => state.user);\r\n    const videoId = props.postId;\r\n\r\n    const [commentValue, setcommentValue] = useState(\"\")\r\n    const handleClick = (event)=>{\r\n        setcommentValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const variables = {\r\n            content: commentValue,\r\n            writer: user.userData._id, // 이번엔 리덕스에서 가져와보자.\r\n            postId: videoId,  // 이건 props 에서 가져오자\r\n\r\n        }\r\n        axios.post('/api/comment/saveComment',variables)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                console.log(response.data.result)\r\n                console.log(\"comment saved\")\r\n                setcommentValue(\"\")\r\n                // 왜 에러나지?? ??????\r\n                props.refeshFunction(response.data.result)  \r\n            } else { \r\n                alert('comment save error')\r\n            }\r\n        },[])\r\n    }\r\n\r\n    console.log(\"comment.js props = \", props.commentLists)\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <p> Replies </p>\r\n            <hr/>\r\n\r\n            {/* Comment Lists */}\r\n            {props.commentLists && props.commentLists.map( (comment,index)=> (\r\n                // responseTo 가 없는애들. 즉 1레벨인 애들만 보여준다.\r\n                (!comment.responseTo && \r\n                <React.Fragment>\r\n                    <SingleComment refeshFunction={props.refeshFunction} key={index} comment={comment} postId={props.postId}/>\r\n                    <ReplyComment refeshFunction={props.refeshFunction} parentCommentId={comment._id} commentLists={props.commentLists} postId={props.postId}/>\r\n                </React.Fragment>)\r\n            ))\r\n            }\r\n           \r\n\r\n            {/* Root Comment Form */}\r\n\r\n            <form style={{display:'flex'}} onSubmit={onSubmit}>\r\n                <textarea style={{width:'100%',borderRadius:'5px'}}\r\n                onChange={handleClick}\r\n                value={commentValue}\r\n                placeholder=\"코멘트를 작성해주세요\"/>\r\n\r\n            <br/>\r\n            <button style={{width:'20%',height:'52px'}} onClick={onSubmit}>Submit</button>\r\n            </form>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\Sections\\SingleComment.js",["194","195","196","197","198","199","200","201","202"],"import React,{useEffect,useState} from 'react'\r\nimport {Row , Col , Card , List, Typographym , Comment,Avatar,Button,Input} from 'antd'\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nconst {TextArea} = Input\r\n\r\nfunction SingleComment(props) {\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [OpenReply, setOpenReply] = useState(false)\r\n    const [CommentValue, setCommentValue] = useState(\"\")\r\n    const onClickReplyOpen = () =>{\r\n        setOpenReply(!OpenReply)\r\n    }\r\n\r\n    const onHandleChange = (event) => {\r\n        setCommentValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        // 댓글내용을 보낸다.  comment.js 에 구현한거를 그대로 쓰자.\r\n\r\n        const variables = {\r\n            content: CommentValue,\r\n            writer: user.userData._id, // 이번엔 리덕스에서 가져와보자.\r\n            postId: props.postId ,  // 이건 props 에서 가져오자\r\n            reponseTo: props.comment._id  // ReplyComment 에는 이게 있어야함.\r\n\r\n        }\r\n        axios.post('/api/comment/saveComment',variables)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                console.log(response.data.result)\r\n                setCommentValue(\"\")\r\n                setOpenReply(false)\r\n                props.refeshFunction(response.data.result)   // 싱글에서도 커맨트 추가 해주자. 그래야 계속 애드애드 된다.\r\n            } else { \r\n                alert('comment save error')\r\n            }\r\n        })\r\n    }\r\n    console.log(\"heres Singlecomment.js = \" + props.comment.content)\r\n\r\n    const actions = [\r\n        <span onClick={onClickReplyOpen} key=\"comment-basic-reply-to\"> Reply to </span>\r\n    ]\r\n    return (\r\n        <div>\r\n            <Comment\r\n            actions={actions}\r\n            author={props.comment.writer.name}\r\n            avatar={<Avatar src alt/>}\r\n            content={<p>{props.comment.content}</p>}\r\n            refeshFunction={props.refeshFunction}\r\n        />\r\n        {OpenReply &&\r\n         <form style={{display:'flex'}} onSubmit={onSubmit}>\r\n                <textarea style={{width:'100%',borderRadius:'5px'}}\r\n                onChange={onHandleChange}\r\n                value={CommentValue}\r\n                placeholder=\"코멘트를 작성해주세요\"/>\r\n\r\n            <br/>\r\n            <button style={{width:'20%',height:'52px'}} onClick={onSubmit}> Submit</button>\r\n            </form>\r\n        }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SingleComment\r\n","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\Sections\\ReplyComment.js",["203","204"],"import React,{useEffect,useState} from 'react'\r\nimport SingleComment from './SingleComment'\r\nfunction ReplyComment(props) {\r\n\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n    const [OpenReply, setOpenReply] = useState(false)\r\n    useEffect(()=>{\r\n        let commentNumber = 0;\r\n        props.commentLists.map((comment) => {\r\n            if (comment.responseTo === props.parentCommentId) {\r\n                commentNumber ++\r\n            }\r\n\r\n        })\r\n        setChildCommentNumber(commentNumber)\r\n\r\n    },[props.CommentLists])   // [] commentlkist 가 바뀔때마다 계속 재실행함.\r\n    const renderReplyComment = (parentCommentId) => {   \r\n        props.commentLists.map((comment,index) => (\r\n            <React.Fragment>\r\n                {     \r\n                    // 2레벨을 재귀로 구현한다\r\n                    comment.responseTo === props.parentCommentId &&\r\n                    <div style={{width:'80%',marginLeft:'40px'} }>\r\n                        <SingleComment refeshFunction={props.refeshFunction} key={index} comment={comment} postId={props.postId}/>\r\n                        <ReplyComment refeshFunction={props.refeshFunction} commentLists={props.commentLists} parentCommentId={parentCommentId}/>\r\n                    </div>\r\n                }\r\n\r\n\r\n            </React.Fragment>\r\n        ))\r\n    }\r\n\r\n    const onHandleChange = () => {\r\n        setOpenReply(!OpenReply)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {ChildCommentNumber>0 && \r\n                <p style={{ fontSize:'14px' , margin:0, color:'gray'}} onClick={onHandleChange} >\r\n                View {ChildCommentNumber} more comment(s)\r\n                </p>\r\n            }\r\n\r\n            {OpenReply && \r\n                renderReplyComment(props.parentCommentId)\r\n            }\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyComment\r\n","C:\\Users\\elbum\\Documents\\VSCode_Project\\mern_youtube\\client\\src\\components\\views\\VideoDetailPage\\Sections\\LikeDislikes.js",["205","206","207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":3,"column":1,"nodeType":"214","endLine":15,"endColumn":2},{"ruleId":"212","severity":1,"message":"213","line":5,"column":1,"nodeType":"214","endLine":56,"endColumn":2},{"ruleId":"215","severity":1,"message":"216","line":48,"column":12,"nodeType":"217","endLine":48,"endColumn":14,"suggestions":"218"},{"ruleId":"208","replacedBy":"219"},{"ruleId":"210","replacedBy":"220"},{"ruleId":"212","severity":1,"message":"213","line":5,"column":1,"nodeType":"214","endLine":56,"endColumn":2},{"ruleId":"215","severity":1,"message":"216","line":48,"column":12,"nodeType":"217","endLine":48,"endColumn":14,"suggestions":"221"},{"ruleId":"222","severity":1,"message":"223","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":16},{"ruleId":"222","severity":1,"message":"226","line":3,"column":18,"nodeType":"224","messageId":"225","endLine":3,"endColumn":28},{"ruleId":"222","severity":1,"message":"227","line":3,"column":30,"nodeType":"224","messageId":"225","endLine":3,"endColumn":37},{"ruleId":"222","severity":1,"message":"228","line":6,"column":15,"nodeType":"224","messageId":"225","endLine":6,"endColumn":20},{"ruleId":"222","severity":1,"message":"229","line":6,"column":21,"nodeType":"224","messageId":"225","endLine":6,"endColumn":27},{"ruleId":"222","severity":1,"message":"230","line":7,"column":9,"nodeType":"224","messageId":"225","endLine":7,"endColumn":27},{"ruleId":"231","severity":1,"message":"232","line":51,"column":21,"nodeType":"233","endLine":51,"endColumn":99},{"ruleId":"212","severity":1,"message":"213","line":3,"column":1,"nodeType":"214","endLine":15,"endColumn":2},{"ruleId":"222","severity":1,"message":"234","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":21},{"ruleId":"222","severity":1,"message":"235","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":59,"column":24,"nodeType":"238","messageId":"239","endLine":59,"endColumn":36,"fix":"240"},{"ruleId":"222","severity":1,"message":"241","line":9,"column":8,"nodeType":"224","messageId":"225","endLine":9,"endColumn":13},{"ruleId":"222","severity":1,"message":"242","line":10,"column":8,"nodeType":"224","messageId":"225","endLine":10,"endColumn":12},{"ruleId":"215","severity":1,"message":"243","line":50,"column":8,"nodeType":"217","endLine":50,"endColumn":10,"suggestions":"244"},{"ruleId":"215","severity":1,"message":"245","line":38,"column":7,"nodeType":"217","endLine":38,"endColumn":9,"suggestions":"246"},{"ruleId":"222","severity":1,"message":"223","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":16},{"ruleId":"222","severity":1,"message":"226","line":3,"column":18,"nodeType":"224","messageId":"225","endLine":3,"endColumn":28},{"ruleId":"222","severity":1,"message":"227","line":3,"column":30,"nodeType":"224","messageId":"225","endLine":3,"endColumn":37},{"ruleId":"222","severity":1,"message":"247","line":5,"column":10,"nodeType":"224","messageId":"225","endLine":5,"endColumn":20},{"ruleId":"222","severity":1,"message":"228","line":6,"column":15,"nodeType":"224","messageId":"225","endLine":6,"endColumn":20},{"ruleId":"222","severity":1,"message":"229","line":6,"column":21,"nodeType":"224","messageId":"225","endLine":6,"endColumn":27},{"ruleId":"222","severity":1,"message":"230","line":7,"column":9,"nodeType":"224","messageId":"225","endLine":7,"endColumn":27},{"ruleId":"231","severity":1,"message":"232","line":57,"column":21,"nodeType":"233","endLine":57,"endColumn":99},{"ruleId":"222","severity":1,"message":"248","line":1,"column":15,"nodeType":"224","messageId":"225","endLine":1,"endColumn":24},{"ruleId":"222","severity":1,"message":"249","line":2,"column":9,"nodeType":"224","messageId":"225","endLine":2,"endColumn":12},{"ruleId":"222","severity":1,"message":"250","line":2,"column":15,"nodeType":"224","messageId":"225","endLine":2,"endColumn":18},{"ruleId":"222","severity":1,"message":"251","line":2,"column":28,"nodeType":"224","messageId":"225","endLine":2,"endColumn":32},{"ruleId":"222","severity":1,"message":"247","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":20},{"ruleId":"222","severity":1,"message":"241","line":8,"column":8,"nodeType":"224","messageId":"225","endLine":8,"endColumn":13},{"ruleId":"222","severity":1,"message":"242","line":9,"column":8,"nodeType":"224","messageId":"225","endLine":9,"endColumn":12},{"ruleId":"222","severity":1,"message":"252","line":10,"column":8,"nodeType":"224","messageId":"225","endLine":10,"endColumn":16},{"ruleId":"222","severity":1,"message":"248","line":1,"column":15,"nodeType":"224","messageId":"225","endLine":1,"endColumn":24},{"ruleId":"222","severity":1,"message":"249","line":2,"column":9,"nodeType":"224","messageId":"225","endLine":2,"endColumn":12},{"ruleId":"222","severity":1,"message":"250","line":2,"column":15,"nodeType":"224","messageId":"225","endLine":2,"endColumn":18},{"ruleId":"222","severity":1,"message":"253","line":2,"column":21,"nodeType":"224","messageId":"225","endLine":2,"endColumn":25},{"ruleId":"222","severity":1,"message":"251","line":2,"column":28,"nodeType":"224","messageId":"225","endLine":2,"endColumn":32},{"ruleId":"222","severity":1,"message":"254","line":2,"column":34,"nodeType":"224","messageId":"225","endLine":2,"endColumn":45},{"ruleId":"222","severity":1,"message":"223","line":2,"column":63,"nodeType":"224","messageId":"225","endLine":2,"endColumn":69},{"ruleId":"222","severity":1,"message":"247","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":20},{"ruleId":"222","severity":1,"message":"252","line":6,"column":8,"nodeType":"224","messageId":"225","endLine":6,"endColumn":16},{"ruleId":"255","severity":1,"message":"256","line":9,"column":42,"nodeType":"257","messageId":"258","endLine":9,"endColumn":44},{"ruleId":"215","severity":1,"message":"259","line":17,"column":7,"nodeType":"217","endLine":17,"endColumn":27,"suggestions":"260"},{"ruleId":"255","severity":1,"message":"256","line":32,"column":46,"nodeType":"257","messageId":"258","endLine":32,"endColumn":48},{"ruleId":"255","severity":1,"message":"256","line":52,"column":52,"nodeType":"257","messageId":"258","endLine":52,"endColumn":54},{"ruleId":"215","severity":1,"message":"261","line":62,"column":7,"nodeType":"217","endLine":62,"endColumn":9,"suggestions":"262"},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["265"],["263"],["264"],["266"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'DatePicker' is defined but never used.","'version' is defined but never used.","'Icons' is defined but never used.","'Avatar' is defined but never used.","'PlusCircleOutlined' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useDispatch' is defined but never used.","'loginUser' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"267","text":"268"},"'Title' is assigned a value but never used.","'Meta' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'variable'. Either include it or remove the dependency array.",["269"],"React Hook useEffect has a missing dependency: 'props.userTo'. Either include it or remove the dependency array.",["270"],"'withRouter' is defined but never used.","'useEffect' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'List' is defined but never used.","'TextArea' is assigned a value but never used.","'Card' is defined but never used.","'Typographym' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'props.commentLists' and 'props.parentCommentId'. Either include them or remove the dependency array.",["271"],"React Hook useEffect has missing dependencies: 'props.userId' and 'variable'. Either include them or remove the dependency array.",["272"],"no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"273","fix":"275"},[1837,1837],"()",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [props.history]",{"range":"284","text":"285"},{"range":"286","text":"285"},"Update the dependencies array to be: [variable]",{"range":"287","text":"288"},"Update the dependencies array to be: [props.userTo]",{"range":"289","text":"290"},"Update the dependencies array to be: [props.CommentLists, props.commentLists, props.parentCommentId]",{"range":"291","text":"292"},"Update the dependencies array to be: [props.userId, variable]",{"range":"293","text":"294"},[1325,1327],"[props.history]",[1325,1327],[1513,1515],"[variable]",[1211,1213],"[props.userTo]",[533,553],"[props.CommentLists, props.commentLists, props.parentCommentId]",[1895,1897],"[props.userId, variable]"]